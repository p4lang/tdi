name: CMake

on:
  push:
    branches:
      - main
      - temp_integ
  pull_request:
    branches:
      - main
      - temp_integ

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - name: dependecies install
      run: sudo apt-get install -y libedit-dev && sudo apt-get install -y expat
    - name: Checking out repo and submodules
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: mkdir -p build && cd build && cmake .. -DSTANDALONE=on -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/install -DTDI_GTEST=ON

    - name: Build
      # Build your program with the given configuration
      run: cd build && make -j$(nproc) && make install

    - name: Tdi Json UT
      # Build test
      run: cd build && make CTEST_OUTPUT_ON_FAILURE=1 test
